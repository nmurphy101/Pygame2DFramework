name: Build Workflow

on:
  push:
    branches: main

permissions:
  contents: write
  pull-requests: read

jobs:
  main:
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create-release.outputs.upload_url }}
      tag_name: ${{ steps.create-release.outputs.tag_name }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: release
        uses: DasBen/release-on-push-action@master
        id: create-release
        with:
          bump_version_scheme: minor

  build-windows:
    if: ${{ needs.main.outputs.upload_url != '' }}
    runs-on: windows-latest
    needs: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
          architecture: 'x64'
          cache: 'pip'

      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Run PyInstaller and zip
        run: |
          python -m PyInstaller main.spec
          Compress-Archive -Path dist/main/* -Destination dist/main.zip
      - uses: actions/upload-artifact@v2
        with:
          name: pygame_framework_windows_${{ needs.main.outputs.tag_name }}.zip
          path: dist/main.zip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.main.outputs.upload_url }}
          asset_path: dist/main.zip
          asset_name: pygame_framework_windows_${{ needs.main.outputs.tag_name }}.zip
          asset_content_type: application/zip

  build-mac:
    if: ${{ needs.main.outputs.upload_url != '' }}
    runs-on: macos-latest
    needs: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
          architecture: 'x64'
          cache: 'pip'

      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Run PyInstaller and zip
        run: |
          python -m PyInstaller main.spec
          zip -vr dist/main.zip dist/main
      - uses: actions/upload-artifact@v2
        with:
          name: pygame_framework_mac_${{ needs.main.outputs.tag_name }}.zip
          path: dist/main.zip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.main.outputs.upload_url }}
          asset_path: dist/main.zip
          asset_name: pygame_framework_mac_${{ needs.main.outputs.tag_name }}.zip
          asset_content_type: application/zip
