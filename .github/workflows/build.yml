name: Build Workflow

on:
  push:
    branches: main

jobs:
  main:
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create-release.outputs.upload_url }}
      tag_name: ${{ steps.create-release.outputs.tag_name }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: release
        uses: rymndhng/release-on-push-action@master
        id: create-release
        with:
          bump_version_scheme: minor

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got upload url ${{ steps.release.outputs.upload_url }}"
          
            
  build-windows:
    runs-on: windows-latest
    needs: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ needs.main.outputs.tag_name }}"
          echo "Got upload url ${{ needs.main.outputs.upload_url }}"

  #     - name: Install Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: '3.10.11'
  #         architecture: 'x64'

  #     - name: Install requirements
  #       run: |
  #         pip install -r requirements.txt

  #     - name: Run PyInstaller
  #       run: |
  #         python -m PyInstaller main.spec
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: pygame_framework_${{ needs.main.outputs.tag_name }}
  #         path: dist/main
          
  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ needs.main.outputs.upload_url }}
  #         asset_path: dist/main
  #         asset_name: pygame_framework_${{ needs.main.outputs.tag_name }}
  #         asset_content_type: application/zip
        
              
